```
# Игра "Угадайка чисел"
# python3

# Правила игры:
# Программа генерирует случайное число в диапазоне от 1 до 100 и просит игрока угадать это число. 
# Игроку даётся 6 попыток, чтобы угадать число.
# Если догадка игрока больше случайного числа, то программа выведет сообщение 'Загаданное число меньше, попробуйте еще раз'. 
# Если догадка меньше случайного числа, то программа выведет сообщение 'Загаданное число больше, попробуйте еще раз'. 
# Если игрок угадывает число, то программа поздравит его и выведет сообщение 'Вы угадали, поздравляем!'.
# За каждую неверную попытку будет отрисовываться человечек на висилице. Когда он будет нарисован полностью, игрок проиграл. 

# Подсказка: оптимальная стратегия в этой игре: бинарный поиск. Однако она позволяет гарантированно угадать число только с 7 попыток. 
# Поэтому, чтобы угадать число с 6 попыток и меньше, нужно придерживаться оптимальной стратегии + удача.

# подключаем библиотеку для генерации случайного числа
from random import randint

# варианты отрисовки повешенного человечка
stages = ['''
                   --------
                   |      |
                   |      
                   |    
                   |      
                   |     
                   -
Неверный ввод. Возведена виселица.''',
'''
                   --------
                   |      |
                   |      O
                   |      |
                   |      |
                   |     
                   -
Неверный ввод. Нарисована голова и туловище.''',
'''
                   --------
                   |      |
                   |      O
                   |     \\|
                   |      |
                   |     
                   -
Неверный ввод. Нарисована одна рука.''',
'''
                   --------
                   |      |
                   |      O
                   |     \\|/
                   |      |
                   |      
                   -
Неверный ввод. Нарисована вторая рука.''',
'''
                   --------
                   |      |
                   |      O
                   |     \\|/
                   |      |
                   |     / 
                   -
Неверный ввод. Нарисована одна нога.''',
'''
                   --------
                   |      |
                   |      O
                   |     \\|/
                   |      |
                   |     / \\
                   -
Неверный ввод. Нарисована вторая нога. Человечек повешен. Вы проиграли!''']

# ввод числа
def inp(count):
	print()
	return input(f'Попытка {count}. Введите целое число от 1 до 100: ')

# проверка ввода на соответствие числу от 1 до 100
def is_valid(num): 
	if num.isdigit():
		return 1 <= int(num) <= 100
	return False 

# отрисовка человечка
def print_hangman(count):
	print(stages[count - 1])

# вопрос в конце игры, запустить ли ее еще раз
def again():
	print()
	answer = input('Хотите сыграть еще раз? (д/н): ')
	while answer.lower() != 'д' and answer.lower() != 'н':
		answer = input('Непонятный ввод. Хотите сыграть еще раз? (д/н): ')
	if answer.lower() == 'н':
		return False
	if answer.lower() == 'д':
		return True

# подсказка по загаданному числу
def check_num(num, n):
	if int(num) > n:
		print('Загаданное число меньше, попробуйте еще раз.')
	else:
		print('Загаданное число больше, попробуйте еще раз.')

# скелет игры
def game():
	n = randint(1, 100) # программа случайно выбирает целое число от 1 до 100
	print('Программа загадала целое число от 1 до 100. Попробуйте угадать его за 6 попыток или быстрее. Если не успеете - казнят человечка (нарисованного).')
	count = 1 # 1 попытка игрока
	num = inp(count) # игрок вводит число
	while is_valid(num) == False: # пока число не прошло проверку на валидность, накручивается счетчик попыток
		print_hangman(count)
		count += 1
		if count == 7:
			break
		num = inp(count)
	while count != 7 and int(num) != n: # если число не угадано и попыток пока меньше 7
		print_hangman(count)
		count += 1
		if count == 7:
			break
		check_num(num, n) # подсказка игроку по числу
		num = inp(count)
		while is_valid(num) == False: # пока число не прошло проверку на валидность, накручивается счетчик попыток
			print_hangman(count)
			count += 1
			if count == 7:
				break
			num = inp(count)
		if count == 7:
			break
	if count == 7: # если счетчик дошел до 7, то игрок проиграл, ему сообщается загаданное число
		print()
		print(f'Было загадано число {n}.')
	else:
		print()
		print(f'Вы угадали за {count} попыток. Без везения тут не обошлось, но вы молодец. Человечек спасён!')
	return again()

# запуск игры
print()
print('Добро пожаловать в игру!')
play = True
while play:
	play = game()
	print()
print('Спасибо, что играли в числовую угадайку!')
print()
